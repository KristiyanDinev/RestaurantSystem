@using RestaurantSystem.Enums
@using RestaurantSystem.Models.DatabaseModels
@using RestaurantSystem.Models
@model RestaurantSystem.Models.View.Staff.Delivery.DeliveryOrdersViewModel;
@{
    ViewData["Title"] = "Delivery Orders";
}

<head>
    @await Html.PartialAsync("_Header")
    <script src="~/assets/index.js"></script>
    <script src="~/assets/staff/delivery/delivery.js"></script>
</head>

<body>
    @await Html.PartialAsync("_StaffNavBar", Model.Staff)
    @await Html.PartialAsync("_RestaurantBar", Model.Staff.Restaurant)

    <a class="btn btn-primary m-2" href="/staff/delivery/restaurant">Go to Restaurants</a>

    @if (TempData.Peek("Success") != null)
    {
        <p class="alert alert-success">Delivered Successfully</p>
        TempData.Remove("Success");
    }

    @if (TempData.Peek("Canceled") != null)
    {
        <p class="alert alert-success">Canceled Delivery Successfully</p>
        TempData.Remove("Canceled");
    }

    <div class="m-2 container">
        @foreach (OrderWithDishesCountModel orderWithDishes in Model.Orders)
        {
            OrderModel order = orderWithDishes.Order;
            <div class="card m-3">
                <div class="card-body">

                    @foreach (DishWithStatusModel dish in orderWithDishes.DishesCount.Keys)
                    {
                        <div class="card card-body m-3">
                            @await Html.PartialAsync("_DisplayDish", dish.Dish)
                            <p class="card-text">Current Status: @dish.OrderedDish.CurrentStatus</p>
                            <p class="card-text">Amount: @orderWithDishes.DishesCount[dish]</p>
                        </div>
                    }

                    <h4 class="card-title">Current Status: @order.CurrentStatus</h4>

                    <p class="card-text">Restaurant Address</p>
                    <p class="card-text">Country: @Model.Restaurant.Country</p>
                    <p class="card-text">State / Province / Region: @Model.Restaurant.State</p>
                    <p class="card-text">City: @Model.Restaurant.City</p>
                    <p class="card-text">Address: @Model.Restaurant.Address</p>
                    <p class="card-text">Postal Code: @Model.Restaurant.PostalCode</p>
                    @if (Model.Restaurant.PhoneNumber != null)
                    {
                        <p class="card-text">Phone Number: @Model.Restaurant.PhoneNumber</p>
                    }
                    @if (Model.Restaurant.Email != null)
                    {
                        <p class="card-text">Email: @Model.Restaurant.Email</p>
                    }
                    @if (Model.Restaurant.ServeCustomersInPlace)
                    {
                        <p class="card-text">Restaurant serves customers in place</p>
                    }

                    <p class="card-text">Total Price: @order.TotalPrice lv.</p>
                    <p class="card-text">Ordered At: @order.OrderedAt</p>

                    <p class="card-text">User Contact</p>
                    <p class="card-text">Name: @order.User.Name</p>
                    @if (order.User.Image != null)
                    {
                        <img class="im-thumbnail rounded m-2" src="order.User.Image" />
                    }
                    <p class="card-text">Email: @order.User.Email</p>
                    <p class="card-text">Phone Number: @order.Address.PhoneNumber</p>

                    <p class="card-text">Address Information</p>
                    <p class="card-text">Country: @order.Address.Country</p>
                    <p class="card-text">State / Region / Province: @order.Address.State</p>
                    <p class="card-text">City: @order.Address.City</p>
                    <p class="card-text">Address: @order.Address.Address</p>
                    <p class="card-text">Postal Code: @order.Address.PostalCode</p>

                    <p class="card-text">Order Notes: @order.Notes</p>

                    <div>
                        @if (order.CurrentStatus.Equals(OrderStatusEnum.Ready))
                        {
                            <p id="error,@order.Id"></p>
                            <button class="btn btn-success m-2" 
                                onclick="startDelivery('@order.Id')">Deliver</button>

                        } else
                        {
                            <button class="btn btn-secondary m-2" disabled>Wait for the order</button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    @await Html.PartialAsync("_Footer")
</body>