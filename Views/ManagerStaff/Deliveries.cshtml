@using RestaurantSystem.Enums
@using RestaurantSystem.Models
@using RestaurantSystem.Models.DatabaseModels
@using RestaurantSystem.Models.View.Messages
@model RestaurantSystem.Models.View.Staff.Manager.ManagerDeliveryViewModel;
@{
    ViewData["Title"] = "Manage Deliveries - Savans Restaurant";
}

<header>
    @await Html.PartialAsync("_Header")
    <script src="~/assets/staff/manager/manager_delivery.js"></script>
</header>

<body>
    @await Html.PartialAsync("_StaffNavBar", Model.Staff)
    @await Html.PartialAsync("_RestaurantBar", Model.Staff.Restaurant)
    @await Html.PartialAsync("_ManagerNavBar")
    @await Html.PartialAsync("_Paging", Model.Page)
    
    <div class="container-fluid py-4">
        <!-- Page Header -->
        <div class="text-center mb-4">
            <h2 class="fw-bold text-warning">
                <i class="bi bi-truck me-3"></i>
                Delivery Management
            </h2>
            <p class="text-muted">Track and manage all restaurant deliveries</p>
        </div>

        @await Html.PartialAsync("_SuccessMessage", new MessageViewModel
        {
            Key = "Canceled",
            Message = "Canceled delivery successfully!"
        })

        @await Html.PartialAsync("_SuccessMessage", new MessageViewModel
        {
            Key = "Deleted",
            Message = "Deleted order Successfully!"
        })

        @if (Model.Orders.Count() == 0)
        {
            <!-- No Active Deliveries -->
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="bi bi-truck display-1 text-warning opacity-50"></i>
                </div>
                <h4 class="text-warning mb-3 fw-bold">No Active Deliveries</h4>
                <p class="text-muted mb-4">All deliveries have been completed successfully!</p>
            </div>
        }

        <!-- Orders List -->
        <div class="row">
            @foreach (OrderWithDishesCountModel orderWithDish in Model.Orders)
            {
                OrderModel order = orderWithDish.Order;
                
                <div class="col-12 mb-4 page-row">
                    <div class="card shadow-sm border border-warning border-2">
                        <!-- Order Header -->
                        <div class="card-header bg-dark border-warning py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0 fw-bold text-light">
                                    <i class="bi bi-receipt me-2 text-warning"></i>
                                    Order #@order.Id
                                </h5>
                                <div class="d-flex align-items-center">
                                    <span class="badge bg-@GetStatusBadgeColor(order.CurrentStatus) fs-6 px-3 py-2 fw-bold me-3">
                                        <i class="bi bi-@GetStatusIcon(order.CurrentStatus) me-1"></i>
                                        @order.CurrentStatus
                                    </span>
                                    <small class="text-warning">
                                        <i class="bi bi-clock me-1"></i>
                                        @order.OrderedAt.ToString("MMM dd, yyyy - HH:mm")
                                    </small>
                                </div>
                            </div>
                        </div>

                        <div class="card-body">
                            <!-- Order Items -->
                            <div class="row mb-4">
                                <div class="col-12">
                                    <h6 class="text-warning fw-bold pb-2 mb-3 border-bottom border-warning">
                                        <i class="bi bi-list-ul me-2"></i>
                                        Order Items
                                    </h6>
                                    <div class="row g-3">
                                        @foreach (DishWithStatusModel dish in orderWithDish.DishesCount.Keys)
                                        {
                                            <div class="col-md-6 col-lg-4">
                                                <div class="card border border-warning bg-warning bg-opacity-10">
                                                    <div class="card-body">
                                                        @await Html.PartialAsync("_DisplayDish", dish.Dish)
                                                        <div class="d-flex justify-content-between align-items-center mt-2">
                                                            <span class="badge bg-secondary">
                                                                Quantity: @orderWithDish.DishesCount[dish]
                                                            </span>
                                                            <span class="badge bg-@GetStatusBadgeColorDish(dish.OrderedDish.CurrentStatus) text-dark">
                                                                <i class="bi bi-@GetStatusIconDish(dish.OrderedDish.CurrentStatus) me-1"></i>
                                                                @dish.OrderedDish.CurrentStatus
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-4">
                                <!-- Delivery Person Info -->
                                <div class="col-lg-4 mb-3">
                                    <div class="card bg-warning bg-opacity-10 border-warning border-opacity-50 h-100">
                                        <div class="card-body">
                                            <h6 class="text-warning fw-bold mb-3">
                                                <i class="bi bi-person-badge me-2"></i>
                                                Delivery Person
                                            </h6>
                                            <div class="d-flex align-items-start">
                                                @if (order.Delivery.User.Image != null)
                                                {
                                                    <img class="img-thumbnail rounded-circle me-3 object-fit-cover" src="@order.Delivery.User.Image" 
                                                        width="60" height="60" alt="Delivery Person" />
                                                }
                                                else
                                                {
                                                    <div class="bg-warning bg-opacity-25 border border-warning rounded-circle me-3 d-flex align-items-center justify-content-center" 
                                                         style="width: 60px; height: 60px;">
                                                        <i class="bi bi-person-fill text-warning fs-4"></i>
                                                    </div>
                                                }
                                                <div class="flex-grow-1">
                                                    <p class="mb-2 fw-semibold">@order.Delivery.User.Name</p>
                                                    <div class="mb-0">
                                                        <i class="bi bi-envelope me-2 text-warning"></i>
                                                        <span class="text-muted small">@order.Delivery.User.Email</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Customer Information -->
                                <div class="col-lg-4 mb-3">
                                    <div class="card bg-secondary bg-opacity-10 border border-warning h-100">
                                        <div class="card-body">
                                            <h6 class="fw-bold mb-3">
                                                <i class="bi bi-person-circle me-2 text-warning"></i>
                                                Customer Contact
                                            </h6>
                                            <div class="d-flex align-items-start">
                                                @if (order.User.Image != null)
                                                {
                                                    <img class="img-thumbnail rounded-circle me-3 object-fit-cover" src="@order.User.Image" 
                                                        width="60" height="60" alt="Customer" />
                                                }
                                                else
                                                {
                                                    <div class="bg-warning bg-opacity-25 border border-warning rounded-circle me-3 d-flex align-items-center justify-content-center" 
                                                         style="width: 60px; height: 60px;">
                                                        <i class="bi bi-person-fill text-warning fs-4"></i>
                                                    </div>
                                                }
                                                <div class="flex-grow-1">
                                                    <p class="mb-2 fw-semibold">@order.User.Name</p>
                                                    <div class="mb-2">
                                                        <i class="bi bi-envelope me-2 text-warning"></i>
                                                        <span class="text-muted small">@order.User.Email</span>
                                                    </div>
                                                    <div class="mb-0">
                                                        <i class="bi bi-telephone me-2 text-warning"></i>
                                                        <span class="text-muted small">@order.UserAddress.PhoneNumber</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Delivery Information -->
                                <div class="col-lg-4 mb-3">
                                    <div class="card bg-warning bg-opacity-10 border-warning border-opacity-50 h-100">
                                        <div class="card-body">
                                            <h6 class="text-warning fw-bold mb-3">
                                                <i class="bi bi-geo-alt-fill me-2"></i>
                                                Delivery Address
                                            </h6>
                                            <address class="mb-3">
                                                <i class="bi bi-house-door-fill text-warning me-2"></i>
                                                @order.UserAddress.Address<br>
                                                @order.UserAddress.City, @order.UserAddress.State<br>
                                                @order.UserAddress.Country @order.UserAddress.PostalCode
                                            </address>
                                            
                                            <div class="border-top pt-3">
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                                                    <span class="text-muted">
                                                        <i class="bi bi-cash me-1"></i>
                                                        Total Price:
                                                    </span>
                                                    <span class="fw-bold fs-5 text-warning">@order.TotalPrice lv.</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Order Notes -->
                            @if (!string.IsNullOrEmpty(order.Notes))
                            {
                                <div class="row mb-3">
                                    <div class="col-12">
                                        <div class="card border border-warning">
                                            <div class="card-body py-3">
                                                <h6 class="text-warning mb-2">
                                                    <i class="bi bi-sticky me-2"></i>
                                                    Order Notes
                                                </h6>
                                                <p class="mb-0 fst-italic">@order.Notes</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <!-- Action Buttons -->
                            <div class="row">
                                <div class="col-12">
                                    <div class="card bg-secondary bg-opacity-10 border-warning">
                                        <div class="card-body text-center py-4">
                                            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center gap-3">
                                                <button class="btn btn-outline-warning px-4 shadow"
                                                        onclick="cancelDelivery('@order.Id')"
                                                        type="button">
                                                    <i class="bi bi-x-circle me-1"></i>
                                                    Cancel Delivery
                                                </button>

                                                <button class="btn btn-outline-danger px-4 shadow"
                                                        onclick="deleteDelivery('@order.Id')"
                                                        type="button">
                                                    <i class="bi bi-trash me-1"></i>
                                                    Delete Order
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        @await Html.PartialAsync("_RestaurantFooter")
    </div>
    @await Html.PartialAsync("_Footer")
</body>

@functions {
    private string GetStatusBadgeColor(OrderStatusEnum status)
    {
        return status switch
        {
            OrderStatusEnum.Pending => "warning",
            OrderStatusEnum.Preparing => "info",
            OrderStatusEnum.Ready => "success",
            OrderStatusEnum.Served => "success",
            OrderStatusEnum.Delivering => "primary",
            OrderStatusEnum.Delivered => "success",
            _ => "secondary"
        };
    }

    private string GetStatusBadgeColorDish(OrderStatusEnum status)
    {
        return status switch
        {
            OrderStatusEnum.Pending => "warning",
            OrderStatusEnum.Preparing => "info",
            OrderStatusEnum.Ready => "success",
            _ => "secondary"
        };
    }

    private string GetStatusBadgeColorDish(DishStatusEnum status)
    {
        return status switch
        {
            DishStatusEnum.Pending => "warning",
            DishStatusEnum.Preparing => "info",
            DishStatusEnum.Ready => "success",
            _ => "secondary"
        };
    }

    private string GetStatusIcon(OrderStatusEnum status)
    {
        return status switch
        {
            OrderStatusEnum.Pending => "hourglass-split",
            OrderStatusEnum.Preparing => "fire",
            OrderStatusEnum.Ready => "check2",
            OrderStatusEnum.Served => "check2-all",
            OrderStatusEnum.Delivering => "truck",
            OrderStatusEnum.Delivered => "check2-all",
            _ => "question-circle"
        };
    }

    private string GetStatusIconDish(DishStatusEnum status)
    {
        return status switch
        {
            DishStatusEnum.Pending => "hourglass-split",
            DishStatusEnum.Preparing => "fire",
            DishStatusEnum.Ready => "check2",
            _ => "question-circle"
        };
    }

    private string GetStatusIconDish(OrderStatusEnum status)
    {
        return status switch
        {
            OrderStatusEnum.Pending => "hourglass-split",
            OrderStatusEnum.Preparing => "fire",
            OrderStatusEnum.Ready => "check2",
            _ => "question-circle"
        };
    }

    private string GetDishIcon(DishTypeEnum dishType)
    {
        return dishType switch
        {
            DishTypeEnum.salads => "leaf-fill",
            DishTypeEnum.soups => "cup-hot",
            DishTypeEnum.appetizers => "flower1",
            DishTypeEnum.dishes => "flower1",
            DishTypeEnum.desserts => "cake2",
            DishTypeEnum.drinks => "cup-straw",
            _ => "dish"
        };
    }
}