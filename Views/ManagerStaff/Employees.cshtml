@using RestaurantSystem.Enums
@using RestaurantSystem.Models.DatabaseModels
@using RestaurantSystem.Models.View.Messages
@model RestaurantSystem.Models.View.Staff.Manager.ManagerEmployeesViewModel;
@{
    ViewData["Title"] = "Manage Employees - Savans Restaurant";
}


<head>
    @await Html.PartialAsync("_Header")
    <script src="~/assets/staff/manager/manager_employees.js"></script>
</head>


<body>
    @await Html.PartialAsync("_StaffNavBar", Model.Staff)
    @await Html.PartialAsync("_RestaurantBar", Model.Staff.Restaurant)

    
    @await Html.PartialAsync("_ManagerNavBar")

    <h3 class="text-center mb-4 mt-5">Manage Employees</h3>
    @await Html.PartialAsync("_Paging", Model.Page)

    <div class="p-4">
        @await Html.PartialAsync("_SuccessMessage", new MessageViewModel
        {
            Key = "AddStaff",
            Message = "Successfully Added New Employee!"
        })


    @await Html.PartialAsync("_SuccessMessage", new MessageViewModel
        {
            Key = "RemoveStaff",
            Message = "Successfully Removed Employee!"
        })

    @await Html.PartialAsync("_SuccessMessage", new MessageViewModel
        {
            Key = "GiveRole",
            Message = "Successfully Give Role to Employee!"
        })

    @await Html.PartialAsync("_SuccessMessage", new MessageViewModel
        {
            Key = "RemoveRole",
            Message = "Successfully Removed Role from Employee!"
        })
    </div>
    <div class="d-flex w-100 form-group m-2 justify-content-center align-items-center flex-column">
        <input id="staff_email" type="email"
               class=" w-75 form-controled rounded p-2"
               placeholder="Enter the email of the user you want to add as staff">
        <button type="button" class="btn btn-success m-2" onclick="addStaff()">Submit</button>
    </div>

    <div class="d-flex justify-content-center">
        <table class="table ptable wtb table-bordered text-center justify-content-center rounded" >
            <thead class="thead-dark">
                <tr>
                    <th>ID</th>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Created At</th>
                    <th>Roles</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="">
                @foreach (UserModel user in Model.Employees)
                {
                    <tr class="page-row">
                        <td data-label="ID">@user.Id</td>
                        <td class="p-1" data-label="Image">
                            <img src="@user.Image" class="img-thumbnail smi "/>
                        </td>
                        <td data-label="Name">@user.Name</td>
                        <td data-label="Email">@user.Email</td>
                        <td data-label="Created">@user.CreatedAt</td>
                        <td data-label="Roles">
                            @foreach (UserRoleModel role in user.Roles)
                            {
                                <p class="card card-body card-title">@role.Role.Name</p>
                            }
                        </td>
                        <td data-label="Actions" class="w-25">
                            <button type="button" class="btn btn-primary m-2" onclick="toggleGiveRole('@user.Id')">Give Role</button>
                            <button type="button" class="btn btn-danger m-2" onclick="toggleRemoveRole('@user.Id')">Remove Role</button>
                            <button type="button" class="btn btn-danger m-2" onclick="removeStaff('@user.Id', '@user.Name')">Remove Staff</button>
                            <div id="give_role,@user.Id" style="display:none;">
                                <h4>Give Role</h4>
                                <select id="gi_role,@user.Id" name="gi_role">
                                    @if (!user.Roles.Any(r => r.RoleName.Equals(RoleEnum.delivery.ToString())))
                                    {
                                        <option value="@RoleEnum.delivery.ToString()">@RoleEnum.delivery.ToString()</option>
                                    }
                                    @if (!user.Roles.Any(r => r.RoleName.Equals(RoleEnum.waitress.ToString())))
                                    {
                                        <option value="@RoleEnum.waitress.ToString()">RoleEnum.waitress.ToString()</option>
                                    }
                                    @if (!user.Roles.Any(r => r.RoleName.Equals(RoleEnum.cook.ToString())))
                                    {
                                        <option value="@RoleEnum.cook.ToString()">@RoleEnum.cook.ToString()</option>
                                    }
                                    @if (!user.Roles.Any(r => r.RoleName.Equals(RoleEnum.manager.ToString())))
                                    {
                                        <option value="@RoleEnum.manager.ToString()">@RoleEnum.manager.ToString()</option>
                                    }
                                </select>

                                <button type="button"
                                        class="btn btn-success m-2"
                                        onclick="giveRole('@user.Id', '@user.Name')">
                                    Give
                                </button>
                            </div>
                            <div id="remove_role,@user.Id" style="display:none;">
                                <h4>Remove Role</h4>
                                <select id="rm_role,@user.Id" class="rounded p-1">
                                    @foreach (UserRoleModel role in user.Roles)
                                    {
                                        <option value="@role.Role.Name">@role.Role.Name</option>
                                    }
                                </select>
                                <button type="button"
                                        class="btn btn-danger m-2"
                                        onclick="removeRole('@user.Id', '@user.Name')">
                                    Remove
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @await Html.PartialAsync("_Footer")
</body>
