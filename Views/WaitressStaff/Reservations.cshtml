@using RestaurantSystem.Enums;
@using RestaurantSystem.Models.DatabaseModels;
@using RestaurantSystem.Models.View.Staff.Waitress
@model ReservationViewModel;
@{
    ViewData["Title"] = "Reservations";
}


<head>
    @await Html.PartialAsync("_Header")

    <script src='~/assets/staff/waitress/reservations_staff.js'></script>
</head>

<body>
    @await Html.PartialAsync("_StaffNavBar", Model.Staff)

    @await Html.PartialAsync("_RestaurantBar", Model.Staff.Restaurant)

    @foreach (ReservationModel reservation in Model.Reservations)
    {
        <div>
            <h3>User</h3>
            <p>Name: @reservation.User.Name</p>

            <h4>Contact</h4>
            <p>Email: @reservation.User.Email</p>

            <h4>Reservation</h4>
            <p>Current Status: @reservation.CurrentStatus</p>
            <p>Reservation At: @reservation.At_Date.ToLocalTime()</p>
            <p>Reserved At: @reservation.Created_At.ToLocalTime()</p>
            <p>Adults: @reservation.Amount_Of_Adults</p>
            <p>Children: @reservation.Amount_Of_Children</p>

            <p>Total Price: @reservation.TotalPrice lv.</p>

            <div class="notes_view">
                <p class="notes_title">Notes: </p>
                <p class="notes">@reservation.Notes</p>
            </div>

            @{
                string pending = ReservationStatusEnum.Pending.ToString();
                string accepted = ReservationStatusEnum.Accepted.ToString();
                string cancelled = ReservationStatusEnum.Cancelled.ToString();
                string currentStatus = reservation.CurrentStatus.ToString();

                @if (currentStatus.Equals(pending, StringComparison.OrdinalIgnoreCase))
                {
                    <button type="button" class="btn btn-success m-2"
                            onclick="changeStatus('@reservation.Id', '@accepted')">
                            Accept
                    </button>

                    <button type="button" class="btn btn-danger m-2"
                            onclick="changeStatus('@reservation.Id', '@cancelled')">
                            Cancel
                    </button>

                } else if (currentStatus.Equals(accepted, StringComparison.OrdinalIgnoreCase))
                {
                    <button type="button" class="btn btn-primary m-2"
                            onclick="changeStatus('@reservation.Id', '@pending')">
                            Pending
                    </button>

                    <button type="button" class="btn btn-danger m-2"
                            onclick="changeStatus('@reservation.Id', '@cancelled')">
                            Cancel
                    </button>

                } else if (currentStatus.Equals(cancelled, StringComparison.OrdinalIgnoreCase))
                {
                    <button type="button" class="btn btn-danger m-2"
                            onclick="deleteReservation('@reservation.Id')">
                            Delete
                    </button>
                }
                            
            }

            <p id="error,@reservation.Id"></p>
        </div>
    }


    @await Html.PartialAsync("_Footer")
    <script src="~/assets/index.js"></script>
</body>


