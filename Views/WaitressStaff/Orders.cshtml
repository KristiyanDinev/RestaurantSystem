@using RestaurantSystem.Enums
@using RestaurantSystem.Models
@using RestaurantSystem.Models.DatabaseModels
@using RestaurantSystem.Models.View.Staff.Waitress
@model OrdersViewModel;
@{
    ViewData["Title"] = "Orders";
}

<head>
    @await Html.PartialAsync("_Header")
    <script src="/assets/index.js"></script>
    <script src="/assets/staff/waitress/orders_staff.js"></script>
</head>


<body>
    @await Html.PartialAsync("_StaffNavBar", Model.Staff)

    @await Html.PartialAsync("_RestaurantBar", Model.Staff.Restaurant)

    <a class="btn btn-success m-2" href="/staff/orders/dishes">Make an Order</a>

    @if (Model.Orders.Count > 0)
    {
        <h1>All placed orders</h1>

    } else
    {
        <h1>No orders</h1>
    }

    @if (TempData.Peek("OrderedSuccess") != null)
    {
        <div class="alert alert-success m-3">
            Successfully Placed an Order
        </div>
        TempData.Remove("OrderedSuccess");
    }

    @if (TempData.Peek("DeletedOrderSuccess") != null)
    {
        <div class="alert alert-success m-3">
            Successfully Deleted an Order
        </div>
        TempData.Remove("DeletedOrderSuccess");
    }

    @if (TempData.Peek("ServedOrderSuccess") != null)
    {
        <div class="alert alert-success m-3">
            Successfully Updated Order Status
        </div>
        TempData.Remove("ServedOrderSuccess");
    }

    @foreach (OrderWithDishesCountModel orderWithDishesCount in Model.Orders)
        {
            OrderModel order = orderWithDishesCount.Order;

            <script>
                registeredOrders.push(String(@order.Id))
            </script>

            <div class="card m-3">
                 <div class="card-body">
                     @foreach (DishWithStatusModel dishWithStatus in orderWithDishesCount.DishesCount.Keys)
                {
                    <div class="card m-3">
                        <div class="card-body">
                            @if (dishWithStatus.Dish.Image != null)
                            {
                                <img src="@dishWithStatus.Dish.Image" class="img-thumbnail rounded" alt="No image for now">
                            }

                            <h4 class="card-title">@dishWithStatus.Dish.Name</h4>
                            <p class="card-text">Amount: @orderWithDishesCount.DishesCount[dishWithStatus]</p>

                            <p class="card-text" id="dishstatus,@order.Id,@dishWithStatus.Dish.Id">
                                Dish Status: @dishWithStatus.OrderedDish.CurrentStatus</p>

                            <p class="card-text">Grams: /@dishWithStatus.Dish.Grams/</p>
                            <p class="card-text">Ingredients: @dishWithStatus.Dish.Ingredients</p>

                            <p class="card-text">Avrage Time To Cook: @dishWithStatus.Dish.AverageTimeToCook minute/s</p>

                            <p class="card-text">Price: @dishWithStatus.Dish.Price lv.</p>
                        </div>
                    </div>
                }

                     <p class="card-text" id="orderstatus,@order.Id">
                        Current Status: @order.CurrentStatus
                     </p>

                     @if (order.TableNumber != null) {
                    <p class="card-text">Table Number: @order.TableNumber</p>
                    } else
                    {
                     <p class="card-text">Delivery Order</p>

                     <p class="card-text">User Details</p>
                     <p class="card-text">Name: @order.User.Name</p>
                     <p class="card-text">Email: @order.User.Email</p>
                    }

                     <p class="card-text">
                        Notes: @order.Notes
                     </p>
                     <p class="card-text">
                        Ordered At: @order.OrderedAt
                     </p>
                     <p class="card-text">
                        Total Price: @order.TotalPrice lv.
                     </p>

                     <p id="stats,@order.Id"></p>
                    @if (order.TableNumber == null &&
                          order.CurrentStatus.Equals(OrderStatusEnum.Delivered))
                    {
                        <button onclick="deleteOrder('@order.Id')"
                                class="card-text btn btn-danger m-2">
                            Delete Order
                        </button>

                    } else if (order.TableNumber != null && order.CurrentStatus.Equals(OrderStatusEnum.Ready))
                    {
                        <button onclick="servedOrder('@order.Id')"
                                class="card-text btn btn-success m-2">
                            Served
                        </button>

                    } else if (order.TableNumber != null && order.CurrentStatus.Equals(OrderStatusEnum.Served))
                    {
                        <button onclick="unserveOrder('@order.Id')"
                                class="card-text btn btn-danger m-2">
                            Unserve
                        </button>

                        <button onclick="deleteOrder('@order.Id')"
                                class="card-text btn btn-danger m-2">
                            Delete Order
                        </button>
                    }
            </div>
            </div>
        }
    @if (Model.Orders.Count > 0)
    {
        <script>
            startWebSocket()
        </script>
    }

    @await Html.PartialAsync("_Footer")
</body>